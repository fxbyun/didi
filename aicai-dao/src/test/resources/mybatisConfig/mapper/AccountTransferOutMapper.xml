<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AccountTransferOutDao">
	<resultMap id="BaseResultMap" type="AccountTransferOutDO">
		<id property="transferOutId" column="transfer_out_id" />
		<result property="fromAccountId" column="from_account" />
		<result property="amount" column="amount" />
		<result property="upRelateType" column="up_relate_type" />
		<result property="upRelateId" column="up_relate_id" />
		<result property="status" column="status" />
		<result property="downRelateType" column="down_relate_type" />
		<result property="downRelateId" column="down_relate_id" />
	</resultMap>

	<sql id="Base_Column_List">
		transfer_out_id, from_account, amount, up_relate_type, up_relate_id, status, down_relate_type, down_relate_id
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from pay_account_transfer_out
		where transfer_out_id = #{transferOutId}
	</select>

	<insert id="insert" parameterType="AccountTransferOutDO">
		insert into pay_account_transfer_out (
			transfer_out_id,
			from_account,
			amount,
			up_relate_type,
			up_relate_id,
			status)
		values (
			#{transferOutId},
			#{fromAccountId},
			#{amount},
			#{upRelateType},
			#{upRelateId},
			#{status})
	</insert>

	<update id="transferOut_subBalance" parameterType="java.util.HashMap">
		update pay_account
		set
			balance = balance - #{amount}
		where account_id = #{fromAccountId} and balance >= #{amount};
	</update>
	
	<update id="transferOut_updateStatus" parameterType="java.util.HashMap">
		update pay_account_transfer_out
		set
			status = #{newTransferOutStatus}
		where transfer_out_id = #{transferOutId} and status = #{oldTransferOutStatus};
	</update>
	
	<select id="transferOut" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		update pay_account
		set
			balance = balance - #{amount}
		where account_id = #{fromAccountId} and balance >= #{amount};
		
		set @accountrow = row_count();
		
		update pay_account_transfer_out
		set status = #{newTransferOutStatus}
		where transfer_out_id = #{transferOutId} and @accountrow = 1 and status = #{oldTransferOutStatus};
		
		select @accountrow, row_count();
	</select>
</mapper>